plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
}

android {
    compileSdk 32

    defaultConfig {
        applicationId "io.github.grishaninvyacheslav.polus_dispatcher"
        minSdk 26
        targetSdk 31
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    buildTypes.each {
        Properties properties = new Properties()
        properties.load(project.rootProject.file("api.properties").newDataInputStream())
        def preferencesFileName = properties.getProperty("PREFERENCES_FILE_NAME", "[EXCEPTION PLACEHOLDER, LOOK AT BUILD.GRADLE: failed to extract preferencesFileName from api.properties]")
        it.buildConfigField "String", "PREFERENCES_FILE_NAME", preferencesFileName
        def preferencesExecutorIdKey = properties.getProperty("PREFERENCES_EXECUTOR_ID_KEY", "[EXCEPTION PLACEHOLDER, LOOK AT BUILD.GRADLE: failed to extract preferencesExecutorIdKey from api.properties]")
        it.buildConfigField "String", "PREFERENCES_EXECUTOR_ID_KEY", preferencesExecutorIdKey
        def apiUrl = properties.getProperty("API_URL", "[EXCEPTION PLACEHOLDER, LOOK AT BUILD.GRADLE: failed to extract apiUrl from api.properties]")
        it.buildConfigField "String", "API_URL", apiUrl
    }
    buildFeatures {
        viewBinding true
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {

    // Default
    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'androidx.appcompat:appcompat:1.5.1'
    implementation 'com.google.android.material:material:1.6.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.5.1'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.5.1'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'

    // Navigation
    implementation 'com.github.terrakok:cicerone:7.1'

    // DI
    def koin_version = "3.1.2"
    implementation "io.insert-koin:koin-core:$koin_version"
    implementation "io.insert-koin:koin-test:$koin_version"
    implementation "io.insert-koin:koin-android:$koin_version"
    implementation "io.insert-koin:koin-core-ext:3.0.1"
    implementation "io.insert-koin:koin-android-compat:$koin_version"

    // Maps API
    // Облегченная библиотека, содержит только карту, слой пробок,
    // LocationManager, UserLocationLayer и возможность скачивать офлайн-карты (только в платной версии).
    implementation 'com.yandex.android:maps.mobile:4.2.1-lite'

    // Полная библиотека в дополнение к lite версии предоставляет автомобильную маршрутизацию,
    // веломаршрутизацию, пешеходную маршрутизацию и маршрутизацию на общественном транспорте,
    // поиск, suggest, геокодирование и отображение панорам.
    // implementation 'com.yandex.android:maps.mobile:4.2.1-full'

    // Async
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:1.4.1"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.4.2"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-play-services:1.4.2"

    // Networking
    // Retrofit - взаимодействие с сетью
    implementation "com.squareup.retrofit2:retrofit:2.9.0"
    implementation "com.squareup.retrofit2:converter-gson:2.9.0"
    implementation "com.squareup.retrofit2:adapter-rxjava2:2.9.0"

    // HttpLoggingInterceptor - логирование Retrofit
    implementation 'com.squareup.okhttp3:logging-interceptor:4.2.1'
}